name: 'Trivy Action'
description: 'Run Trivy vulnerability scanner'

inputs:
  image-tags:
    required: true
    type: string
  image-name:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Set variables
      env:
        TAGS: ${{ inputs.image-tags }}
        NAME: ${{ inputs.image-name }}
      id: vars
      shell: bash
      run: |
        tag=$(echo "$TAGS" | head -1)
        name=${NAME// /-}
        echo "tag=${tag}" >> $GITHUB_OUTPUT
        echo "name=${name}" >> $GITHUB_OUTPUT

    - name: Install ORAS
      id: oras
      uses: oras-project/setup-oras@v1

    - name: Authenticate to GHCR
      env:
        PW: ${{ github.token }}
      id: ghcr
      shell: bash
      run: echo "$PW" | oras login ghcr.io -u github-actions --password-stdin

    - name: Pull Trivy DBs from GHCR
      id: pull
      shell: bash
      run: |
        mkdir -p $GITHUB_WORKSPACE/.cache/trivy/db
        oras pull ghcr.io/temporalio/trivy-db:2
        tar -xzf db.tar.gz -C $GITHUB_WORKSPACE/.cache/trivy/db
        rm db.tar.gz

        mkdir -p $GITHUB_WORKSPACE/.cache/trivy/java-db
        oras pull ghcr.io/temporalio/trivy-java-db:1
        tar -xzf javadb.tar.gz -C $GITHUB_WORKSPACE/.cache/trivy/java-db
        rm javadb.tar.gz

    - name: Install Trivy
      uses: aquasecurity/setup-trivy@v0.2.3
      with:
        version: v0.65.0

    - name: Scan Container Image
      id: scan
      shell: bash
      env:
        TRIVY_SKIP_DB_UPDATE: true
        TRIVY_SKIP_JAVA_DB_UPDATE: true
        TRIVY_CACHE_DIR: ${{ github.workspace }}/.cache/trivy
      run: |
        trivy image --severity HIGH,CRITICAL --no-progress ${{ steps.vars.outputs.tag }} --format sarif --output trivy-${{ steps.vars.outputs.name }}-results.sarif

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: trivy-${{ steps.vars.outputs.name }}-results.sarif
        category: trivy-${{ steps.vars.outputs.name }}-results
